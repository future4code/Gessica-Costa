{"version":3,"sources":["components/PerguntaAberta.js","components/Etapa2.js","components/PerguntaFechada.js","components/Etapa1.js","components/Etapa3.js","components/Etapa4.js","App.js","serviceWorker.js","index.js"],"names":["PerguntaAberta","this","props","pergunta","React","Component","Etapa2","PerguntaFechada","selecao","opcoes","map","op","index","key","value","console","log","Etapa1","Etapa3","Etapa4","App","state","secao","botaoEscolhas","etapaSeguinte","setState","secaoEscolhida","className","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oOAEaA,G,MAAb,uKAEQ,OACI,6BACI,2BAAIC,KAAKC,MAAMC,eAJ/B,GAAoCC,IAAMC,YCC7BC,EAAb,uKAEQ,OACI,6BACI,8EACA,kBAAC,EAAD,CAAgBH,SAAU,qBAC1B,gCACA,kBAAC,EAAD,CAAgBA,SAAU,iCAC1B,qCARhB,GAA4BC,IAAMC,WCDrBE,EAAb,uKAEQ,IAEMC,EAFOP,KAAKC,MAAMO,OAEDC,KAAI,SAACC,EAAIC,GAC5B,OAAO,4BAAQC,IAAKD,EAAOE,MAAOF,GAAQD,MAI9C,OADRI,QAAQC,IAAIR,EAAQ,GAAGK,KAEX,6BACI,2BAAIZ,KAAKC,MAAMC,UACf,6BAAK,gCAASK,SAZ9B,GAAqCJ,IAAMC,WCG9BY,EAAb,uKAEQ,OACI,6BACI,sDACA,8BACI,kBAAC,EAAD,CAAgBd,SAAU,wBAC1B,gCACA,kBAAC,EAAD,CAAgBA,SAAU,uBAC1B,gCACA,kBAAC,EAAD,CAAgBA,SAAU,uBAC1B,gCACA,kBAAC,EAAD,CAAiBA,SAAU,8BAC3BM,OAAQ,CACJ,6BACA,2BACA,6BACA,oCAjBxB,GAA4BL,IAAMC,WCDrBa,EAAb,uKAEQ,OACI,6BACI,4EACA,kBAAC,EAAD,CAAgBf,SAAU,oEAC1B,gCACA,kBAAC,EAAD,CAAiBA,SAAU,2CAC3BM,OAAQ,CAAC,mBAAiB,qBAAmB,kCAA6B,wCAR1F,GAA4BL,IAAMC,WCFrBc,EAAb,uKAEQ,OACI,6BACI,sDACA,4DALhB,GAA4Bf,IAAMC,WCmDnBe,E,4MA3CbC,MAAQ,CACNC,MAAO,G,EAGTC,cAAgB,WACf,IAEMC,EAFa,EAAKH,MAAMC,MAEK,EAEnC,EAAKG,SAAS,CAACH,MAAOE,K,EAGvBE,eAAiB,WACf,OAAQ,EAAKL,MAAMC,OACjB,KAAK,EACH,OAAO,kBAAC,EAAD,MAET,KAAK,EACH,OAAO,kBAAC,EAAD,MAET,KAAK,EACH,OAAO,kBAAC,EAAD,MAET,KAAK,EACH,OAAO,kBAAC,EAAD,MAET,QACE,OAAO,oD,uDAMX,OACE,yBAAKK,UAAU,OACZ1B,KAAKyB,iBACN,6BACA,4BAAQE,QAAS3B,KAAKsB,eAAtB,yB,GAvCUnB,IAAMC,WCIJwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,a","file":"static/js/main.2ba6dcad.chunk.js","sourcesContent":["import React from 'react'\n\nexport class PerguntaAberta extends React.Component {\n    render() {\n        return(\n            <div>\n                <p>{this.props.pergunta}</p>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { PerguntaAberta } from './PerguntaAberta'\n\nexport class Etapa2 extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3>ETAPA 2 - Informações do Ensino Superior</h3>\n                <PerguntaAberta pergunta={\"1. Qual o curso?\"} />\n                <input />\n                <PerguntaAberta pergunta={\"2. Qual a unidade de ensino?\"} />\n                <input />\n            </div>\n        )\n    }\n}","import React from 'react'\n\nexport class PerguntaFechada extends React.Component {\n    render() {\n        let opcoes = this.props.opcoes\n\n        const selecao = opcoes.map((op, index) => {\n            return <option key={index} value={index}>{op}</option>\n        })\n\nconsole.log(selecao[0].key)\n        return (\n            <div>\n                <p>{this.props.pergunta}</p>\n                <div><select>{selecao}</select></div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Etapa2 } from './Etapa2'\nimport { PerguntaAberta } from './PerguntaAberta'\nimport { PerguntaFechada } from './PerguntaFechada'\n\nexport class Etapa1 extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3>ETAPA 1 - Dados gerais</h3>\n                <form>\n                    <PerguntaAberta pergunta={\"1. Qual o seu nome?\"} />\n                    <input />\n                    <PerguntaAberta pergunta={\"2. Qual sua idade?\"} />\n                    <input />\n                    <PerguntaAberta pergunta={\"3. Qual seu email?\"} />\n                    <input />\n                    <PerguntaFechada pergunta={\"4. Qual a sua escolaridade?\"}\n                    opcoes={[\n                        \"Ensino médio incompleto\",\n                        \"Ensino médio completo\",\n                        \"Ensino superior incompleto\",\n                        \"Ensino superior completo\"\n                    ]} />\n                </form>\n            </div >\n        )\n    }\n}","import React from 'react'\nimport { PerguntaFechada } from './PerguntaFechada'\nimport { PerguntaAberta } from './PerguntaAberta'\n\nexport class Etapa3 extends React.Component {\n    render() {\n        return (\n            <div>\n                <h3>ETAPA 3 - Informações gerais de ensino</h3>\n                <PerguntaAberta pergunta={\"1. Por que você não terminou um curso de graduação?\"} />\n                <input />\n                <PerguntaFechada pergunta={\"2. Você fez algum curso complementar?\"} \n                opcoes={[\"Curso Técnico\", \"Curso de Inglês\", \"Curso de Técnico e Inglês\", \"Não fiz curso complementar\"]}\n                />\n            </div>\n        )\n    }\n}","import React from 'react'\n\nexport class Etapa4 extends React.Component {\n    render() {\n        return(\n            <div>\n                <h1>O formulário acabou</h1>\n                <p>Obrigada por participar.</p>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components';\nimport { Etapa1 } from './components/Etapa1';\nimport { Etapa2 } from './components/Etapa2';\nimport { Etapa3 } from './components/Etapa3';\nimport { Etapa4 } from './components/Etapa4';\n\nclass App extends React.Component {\n  \n  state = {\n    secao: 1\n  }\n  \n  botaoEscolhas = () => {\n   const etapaAtual = this.state.secao\n   //console.log(etapaAtual)\n   const etapaSeguinte = etapaAtual + 1\n\n   this.setState({secao: etapaSeguinte})\n  }\n\n  secaoEscolhida = () => {\n    switch (this.state.secao) {\n      case 1:\n        return <Etapa1 />\n\n      case 2:\n        return <Etapa2 />\n\n      case 3:\n        return <Etapa3 />\n\n      case 4:\n        return <Etapa4 />\n\n      default:\n        return <div>Escolha uma Etapa</div>\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        {this.secaoEscolhida()}\n        <br />\n        <button onClick={this.botaoEscolhas}>Próxima etapa</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}