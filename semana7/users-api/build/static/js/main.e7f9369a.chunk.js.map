{"version":3,"sources":["components/CadastroDeUsuario.js","components/DetalheDoUsuario.js","components/ListaDeUsuarios.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","CadastroContainer","Input","input","Botao","button","CadastroDeUsuario","state","usuarios","usuarioValue","emailValue","onChangeNome","event","setState","target","value","onChangeEmail","onCreateUsuario","cadastrarUsuario","usuarioName","usuarioEmail","body","name","email","axios","post","headers","Authorization","then","response","window","alert","catch","error","onClick","this","props","onChange","placeholder","React","Component","BotaoApaga","DetalheDoUsuario","usuario","buscaId","id","a","get","console","log","data","lista","objUsuarios","onClickApaga","ListaContainer","Usuario","DetalheContainer","AUsuario","size","margin","ListaDeUsuarios","listaUsuarios","detalhe","buscaUsuarios","confirmaApagarUsuario","idUsuario","confirm","apagarUsuario","delete","muda","voltaListaUsuarios","map","index","key","App","usuarioCadastrado","onClickCadastro","onClickListaDeUsuarios","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e7f9369a.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst Header = styled.div`\n  position: relative;\n  top: 0;\n  margin: 10px;\n`\nconst CadastroContainer = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n  border: 1px solid;\n  padding: 40px 50px;\n`\nconst Input = styled.input`\n  width: 98%;\n  margin-bottom: 20px;\n`\nconst Botao = styled.button`\n  width: 100%;\n  background-color: rgb(192, 192, 111);\n  color: white;\n\tborder: none;\n\tpadding: 5px;\n\theight: 30px;\n\tcursor: pointer;\n`\n\nclass CadastroDeUsuario extends React.Component {\n  state = {\n    usuarios: [],\n    usuarioValue: '',\n    emailValue: ''\n  }\n\n  onChangeNome = event => {\n    this.setState({usuarioValue: event.target.value})\n  }\n\n  onChangeEmail = event => {\n    this.setState({emailValue: event.target.value})\n  }\n\n  onCreateUsuario = event => {\n    this.cadastrarUsuario(this.state.usuarioValue, this.state.emailValue)\n  }\n\n  cadastrarUsuario = (usuarioName, usuarioEmail) => {\n    this.setState({usuarioValue: '',\n    emailValue: ''})\n\n    const body = {\n      name: usuarioName,\n      email: usuarioEmail\n    }\n\n    axios\n      .post(\n        'https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users',\n        body,\n        {\n          headers: {\n            Authorization: 'gessica-costa-julian'\n          }\n        }\n      )\n      .then(response => {\n        window.alert('Usuário cadastrado', response)\n      })\n      .catch(error => {\n        alert('ERRO', error.response)\n      })\n  }\n\n    render() {\n      return (\n        <Container>\n          <Header>\n            <Botao onClick={this.props.onClick}>Lista de Usuários</Botao>\n          </Header>\n          <CadastroContainer>\n          <label>Nome:</label>\n          <Input onChange={this.onChangeNome} value={this.state.usuarioValue} placeholder='Nome do usuário'></Input>\n          <label>Email:</label>\n          <Input onChange={this.onChangeEmail} value={this.state.emailValue} placeholder='Email do usuário'></Input>\n          <Botao onClick={this.onCreateUsuario}>Cadastrar</Botao>\n        </CadastroContainer>\n        </Container>\n      );\n    }\n  }\n  \n  export default CadastroDeUsuario;\n  ","import React from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px;\r\n`\r\nconst BotaoApaga = styled.button`\r\n    background-color: white;\r\n    color: red;\r\n\tborder: none;\r\n\tpadding: 5px;\r\n\theight: 30px;\r\n\tcursor: pointer;\r\n`\r\n\r\nclass DetalheDoUsuario extends React.Component {\r\n    state = {\r\n        usuario: []\r\n    }\r\n\r\n    buscaId = async (id) => {\r\n        try {\r\n            const response = await axios.get(\r\n                'https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users/' +\r\n                id,\r\n                {\r\n                    headers: {\r\n                        Authorization: 'gessica-costa-julian'\r\n                    }\r\n                }\r\n            )\r\n            console.log('buscaid',response.data)\r\n            this.setState({ usuario: response.data })\r\n        } catch (error) {\r\n            alert('ERRO')\r\n            console.log(error.response)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const lista = this.props.objUsuarios\r\n        console.log('lista', this.props.objUsuarios)\r\n\r\n        return (\r\n            <Container>\r\n                <label>Nome: {lista.name}</label>\r\n                <label>Email: {lista.email}</label>\r\n                <BotaoApaga onClick={this.props.onClickApaga}>Apagar Usuário</BotaoApaga>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetalheDoUsuario","import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport DetalheDoUsuario from './DetalheDoUsuario'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\nconst Header = styled.div`\n  position: relative;\n  top: 0;\n  margin: 10px;\n`\nconst ListaContainer = styled.div`\n  padding: 30px;\n`\nconst Usuario = styled.div`\n    width: 200px;\n    display: flex;\n    justify-content: space-between;\n    border-bottom: 1px solid;\n    align-items: center;\n`\nconst DetalheContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\nconst AUsuario = styled.a`\n    cursor: pointer;\n    :hover {\n        opacity: 0.5;\n    }\n`\nconst Botao = styled.button`\n    width: ${props => props.size};\n    margin: ${props => props.margin};\n    background-color: rgb(192, 192, 111);\n    color: white;\n\tborder: none;\n\tpadding: 5px;\n\theight: 30px;\n\tcursor: pointer;\n`\nconst BotaoApaga = styled.button`\n    background-color: white;\n    color: red;\n\tborder: none;\n\tpadding: 5px;\n\theight: 30px;\n\tcursor: pointer;\n`\n\nclass ListaDeUsuarios extends React.Component {\n\n    state = {\n        listaUsuarios: [],\n        usuario: [],\n        detalhe: true\n    }\n\n    componentDidMount() {\n        this.buscaUsuarios()\n    }\n\n    buscaUsuarios = async () => {\n        try {\n            const response = await axios.get(\n                'https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users',\n                {\n                    headers: {\n                        Authorization: 'gessica-costa-julian'\n                    }\n                }\n            )\n            // console.log(response.data)\n            this.setState({ listaUsuarios: response.data })\n        } catch (error) {\n            alert('ERRO')\n            console.log(error.response)\n        }\n    }\n\n    confirmaApagarUsuario = idUsuario => {\n        let confirmacao = window.confirm('Tem certeza de que deseja deletar?')\n\n        return confirmacao ? this.apagarUsuario(idUsuario) : console.log('Não apagou')\n    }\n\n    apagarUsuario = idUsuario => {\n        axios\n            .delete(\n                'https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users/' +\n                idUsuario,\n                {\n                    headers: {\n                        Authorization: 'gessica-costa-julian'\n                    }\n                }\n            )\n            .then(response => {\n                alert('Usuário apagado.')\n                //console.log(response)\n                this.buscaUsuarios()\n            })\n            .catch(error => {\n                alert('ERRO')\n                console.log(error.response)\n            })\n    }\n\n    buscaId = async (id) => {\n        try {\n            const response = await axios.get(\n                'https://us-central1-labenu-apis.cloudfunctions.net/labenusers/users/' +\n                id,\n                {\n                    headers: {\n                        Authorization: 'gessica-costa-julian'\n                    }\n                }\n            )\n            // console.log('buscaid', response.data)\n            this.setState({ usuario: response.data })\n            let muda = !this.state.detalhe\n            this.setState({ detalhe: muda })\n        } catch (error) {\n            alert('ERRO')\n            console.log(error.response)\n        }\n    }\n    voltaListaUsuarios = () => {\n        this.setState({ detalhe: true })\n    }\n\n    render() {\n        const lista = this.state.listaUsuarios.map((usuario, index) => {\n            return (\n                <Usuario key={index}>\n                    <AUsuario onClick={() => this.buscaId(usuario.id)}>{usuario.name}</AUsuario>\n                    <BotaoApaga onClick={() => this.confirmaApagarUsuario(usuario.id)}>X</BotaoApaga>\n                </Usuario>)\n        })\n\n        if (this.state.detalhe) {\n            return (\n                <Container>\n                    <Header>\n                        <Botao size={'100%'} onClick={this.props.onClick}>Cadastro de Usuários</Botao>\n                    </Header>\n                    <h4>Usuários cadastrados</h4>\n                    <ListaContainer>\n                        {lista}\n                    </ListaContainer>\n                </Container>\n            );\n        } else {\n            return (\n                <DetalheContainer>\n                    <Botao size={'auto'} margin={'10px'} onClick={this.voltaListaUsuarios}>Lista de Usuários</Botao>\n                    < DetalheDoUsuario\n                        objUsuarios={this.state.usuario}\n                        onClickApaga={() => this.confirmaApagarUsuario(this.state.usuario.id)}\n                    />\n                </DetalheContainer>\n            )\n        }\n    }\n}\n\nexport default ListaDeUsuarios;\n","import React from 'react';\nimport './App.css';\nimport CadastroDeUsuario from './components/CadastroDeUsuario'\nimport ListaDeUsuarios from './components/ListaDeUsuarios';\n\nclass App extends React.Component {\n  state = {\n    usuarioCadastrado: false\n  }\n\n  onClickCadastro = () => {\n    this.setState({ usuarioCadastrado: true })\n  }\n\n  onClickListaDeUsuarios = () => {\n    this.setState({ usuarioCadastrado: false })\n  }\n\n  render() {\n    if (this.state.usuarioCadastrado) {\n      return <ListaDeUsuarios onClick={this.onClickListaDeUsuarios} />\n    } else {\n      return <CadastroDeUsuario onClick={this.onClickCadastro} />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}